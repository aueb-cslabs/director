// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event_Scope int32

const (
	Event_Terminal Event_Scope = 0
)

var Event_Scope_name = map[int32]string{
	0: "Terminal",
}

var Event_Scope_value = map[string]int32{
	"Terminal": 0,
}

func (x Event_Scope) String() string {
	return proto.EnumName(Event_Scope_name, int32(x))
}

func (Event_Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0, 0}
}

type Event_Type int32

const (
	Event_KeepAlive       Event_Type = 0
	Event_Greetings       Event_Type = 1
	Event_Goodbye         Event_Type = 2
	Event_SessionStarting Event_Type = 5
	Event_SessionStart    Event_Type = 6
	Event_SessionEnd      Event_Type = 7
)

var Event_Type_name = map[int32]string{
	0: "KeepAlive",
	1: "Greetings",
	2: "Goodbye",
	5: "SessionStarting",
	6: "SessionStart",
	7: "SessionEnd",
}

var Event_Type_value = map[string]int32{
	"KeepAlive":       0,
	"Greetings":       1,
	"Goodbye":         2,
	"SessionStarting": 5,
	"SessionStart":    6,
	"SessionEnd":      7,
}

func (x Event_Type) String() string {
	return proto.EnumName(Event_Type_name, int32(x))
}

func (Event_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0, 1}
}

type Event struct {
	Scope                Event_Scope       `protobuf:"varint,1,opt,name=scope,proto3,enum=Event_Scope" json:"scope,omitempty"`
	Type                 Event_Type        `protobuf:"varint,2,opt,name=type,proto3,enum=Event_Type" json:"type,omitempty"`
	Terminal             string            `protobuf:"bytes,3,opt,name=terminal,proto3" json:"terminal,omitempty"`
	Data                 map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetScope() Event_Scope {
	if m != nil {
		return m.Scope
	}
	return Event_Terminal
}

func (m *Event) GetType() Event_Type {
	if m != nil {
		return m.Type
	}
	return Event_KeepAlive
}

func (m *Event) GetTerminal() string {
	if m != nil {
		return m.Terminal
	}
	return ""
}

func (m *Event) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("Event_Scope", Event_Scope_name, Event_Scope_value)
	proto.RegisterEnum("Event_Type", Event_Type_name, Event_Type_value)
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterMapType((map[string]string)(nil), "Event.DataEntry")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x31, 0x4f, 0xfb, 0x30,
	0x14, 0xc4, 0x9b, 0x34, 0x6e, 0x9b, 0x97, 0xfe, 0xfb, 0xb7, 0x1e, 0x20, 0x45, 0x5d, 0xa8, 0x22,
	0x86, 0x4c, 0x19, 0xca, 0x00, 0x62, 0x03, 0x11, 0x75, 0x60, 0x73, 0x3a, 0xb1, 0xb9, 0xe4, 0x09,
	0x22, 0x82, 0x1d, 0x25, 0x26, 0x52, 0xbe, 0x21, 0x1f, 0x0b, 0xd9, 0x89, 0x2a, 0x36, 0xdf, 0xef,
	0xce, 0x7a, 0xa7, 0x83, 0x88, 0x7a, 0x52, 0x26, 0x6b, 0x5a, 0x6d, 0x74, 0xf2, 0xe3, 0x03, 0xcb,
	0xad, 0xc6, 0x04, 0x58, 0xf7, 0xa6, 0x1b, 0x8a, 0xbd, 0x9d, 0x97, 0x6e, 0xf6, 0xeb, 0xcc, 0xe1,
	0xac, 0xb0, 0x4c, 0x8c, 0x16, 0x5e, 0x43, 0x60, 0x86, 0x86, 0x62, 0xdf, 0x45, 0xa2, 0x29, 0x72,
	0x1c, 0x1a, 0x12, 0xce, 0xc0, 0x2d, 0xac, 0x0c, 0xb5, 0x5f, 0x95, 0x92, 0x75, 0x3c, 0xdf, 0x79,
	0x69, 0x28, 0xce, 0x1a, 0x6f, 0x20, 0x28, 0xa5, 0x91, 0x71, 0xb0, 0x9b, 0xa7, 0xd1, 0x9e, 0x4f,
	0x9f, 0x9f, 0xa5, 0x91, 0xb9, 0x32, 0xed, 0x20, 0x9c, 0xbb, 0xbd, 0x83, 0xf0, 0x8c, 0x90, 0xc3,
	0xfc, 0x93, 0x06, 0xd7, 0x28, 0x14, 0xf6, 0x89, 0x97, 0xc0, 0x7a, 0x59, 0x7f, 0x8f, 0x15, 0x42,
	0x31, 0x8a, 0x07, 0xff, 0xde, 0x4b, 0xae, 0x80, 0xb9, 0xae, 0xb8, 0x86, 0xd5, 0x71, 0xba, 0xc9,
	0x67, 0xc9, 0x07, 0x04, 0xb6, 0x1f, 0xfe, 0x83, 0xf0, 0x85, 0xa8, 0x79, 0xac, 0xab, 0x9e, 0xf8,
	0xcc, 0xca, 0x43, 0x4b, 0x64, 0x2a, 0xf5, 0xde, 0x71, 0x0f, 0x23, 0x58, 0x1e, 0xb4, 0x2e, 0x4f,
	0x03, 0x71, 0x1f, 0x2f, 0xe0, 0x7f, 0x41, 0x5d, 0x57, 0x69, 0x55, 0x18, 0xd9, 0xda, 0x08, 0x67,
	0xc8, 0x61, 0xfd, 0x17, 0xf2, 0x05, 0x6e, 0x00, 0x26, 0x92, 0xab, 0x92, 0x2f, 0x9f, 0x96, 0xaf,
	0xcc, 0x6e, 0xd0, 0x9d, 0x16, 0x6e, 0xda, 0xdb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x87, 0x44,
	0x20, 0x28, 0x69, 0x01, 0x00, 0x00,
}
